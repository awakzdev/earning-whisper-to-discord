name: EW to Discord

permissions:
  contents: write
  actions: read

on:
  schedule:
    - cron: "0 15 * * SUN"   # Sundays 18:00 Asia/Jerusalem (UTC+3)
  workflow_dispatch:
    inputs:
      force:
        description: "Force latest (ignore last_id)"
        type: boolean
        default: false
      photo:
        description: "Attach image(s)"
        type: boolean
        default: true
      notify_noop:
        description: "Post a 'no updates' log message if nothing new"
        type: boolean
        default: true
      phrase_only:
        description: "Require phrase match (ignores newest if phrase not present)"
        type: boolean
        default: false

concurrency:
  group: ew-to-discord
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: pip install -U requests python-dotenv

      # Debounce cron: if we just posted in the last 10 minutes, skip
      - name: Debounce recent post (cron only)
        if: github.event_name == 'schedule'
        shell: bash
        run: |
          if [[ -f last_post.ts ]]; then
            last=$(cat last_post.ts || echo 0)
            now=$(date +%s)
            if (( now - last < 600 )); then
              echo "Recent post ${last}, skipping cron."
              exit 0
            fi
          fi

      # Build CLI args
      - name: Build args
        id: build
        shell: bash
        run: |
          args=""
          # For workflow_dispatch, respect inputs; for cron, defaults:
          force="${{ github.event_name == 'workflow_dispatch' && inputs.force || 'false' }}"
          photo="${{ github.event_name == 'workflow_dispatch' && inputs.photo || 'true' }}"
          notify_noop="${{ github.event_name == 'workflow_dispatch' && inputs.notify_noop || 'true' }}"
          phrase_only="${{ github.event_name == 'workflow_dispatch' && inputs.phrase_only || 'false' }}"
          [[ "$force" == "true" || "$force" == "1" ]] && args="$args --force-latest"
          [[ "$photo" == "true" || "$photo" == "1" ]] && args="$args --photo"
          [[ "$notify_noop" == "true" || "$notify_noop" == "1" ]] && args="$args --notify-noop"
          [[ "$phrase_only" == "true" || "$phrase_only" == "1" ]] && args="$args --phrase-only"
          echo "args=$args" >> "$GITHUB_OUTPUT"

      - name: Run EW poster
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo "Args: ${{ steps.build.outputs.args }}"
          python ew_to_discord.py --debug ${{ steps.build.outputs.args }}

      - name: Commit state if it changed
        shell: bash
        run: |
          set -euo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          if [[ -f "last_id.json" ]]; then
            if ! git diff --quiet -- last_id.json; then
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git add last_id.json last_post.ts || true
              git commit -m "chore(ci): update bot state [skip ci]"
              git push
            else
              echo "No changes to bot state files"
            fi
          else
            echo "No last_id.json produced; nothing to commit."
          fi
